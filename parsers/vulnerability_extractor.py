import re

def extract_vulnerabilities(text):
    VULNS = []
    text = re.sub(
        r"We would also like to thank.*?stable channel", "",
        text, flags=re.IGNORECASE | re.DOTALL
    )

    vuln_pattern = re.compile(
        r"(?:\[\$(\d+)\])?\s*"
        r"(?:\[\s*NA\s*\])?\s*"
        r"\[\s*(\d+)\s*\]\s*"
        r"(Critical|High|Medium|Low)\s+"
        r"(CVE-\d{4}-\d{4,7})"
        r":?\s*([^.]+)\.\s*"
        r"Reported by\s+(.+?)\s+on\s+\d{4}-\d{2}-\d{2}",
        re.IGNORECASE
    )

    for match in vuln_pattern.findall(text):
        bounty, bug_id, severity, cve_id, description, reporter = match

        if "exists in the wild" in description.lower():
            continue

        VULNS.append({
            "bounty": f"${bounty}" if bounty else "N/A",
            "bug_id": bug_id,
            "severity": severity,
            "cve": cve_id,
            "description": description.strip(),
            "reported_by": reporter.strip(),
            "git_link": "None",
            "chromium_issue": "None"
        })

    return VULNS
